"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6746],{2236:(e,s,n)=>{n.r(s),n.d(s,{ResponsiveYouTube:()=>m,assets:()=>d,contentTitle:()=>h,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"modules/fkg3","title":"FKG3: Fader & Key Generating Compositor","description":"useEffect(() => {","source":"@site/docs/modules/fkg3.md","sourceDirName":"modules","slug":"/modules/fkg3","permalink":"/docs/modules/fkg3","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"draft":false,"title":"FKG3: Fader & Key Generating Compositor"},"sidebar":"modulesSidebar","previous":{"title":"FACTORS: Triple Four-Quadrant Multiplier","permalink":"/docs/modules/factors"},"next":{"title":"KEYCHAIN: Triple Hard Key Generator","permalink":"/docs/modules/keychain"}}');var a=n(74848),i=n(28453),r=n(96540);const l=n.p+"assets/images/fkg3_frontpanel-3b3e3155120ada00df3ac5910c90890c.png",o=n.p+"assets/images/fkg3_panel_labeled_496x1024-2de22b192b08a5a5d33d4d7f8f693ef2.png",c={draft:!1,title:"FKG3: Fader & Key Generating Compositor"},h="FKG3",d={};function m({videoId:e}){const s=(0,r.useRef)(null),[n,t]=(0,r.useState)(0);return(0,r.useEffect)(()=>{if(s.current){const e=()=>{const e=s.current.offsetWidth;t(9*e/16)};return e(),window.addEventListener("resize",e),()=>window.removeEventListener("resize",e)}},[]),(0,a.jsx)("iframe",{ref:s,width:"100%",height:n,src:`https://www.youtube.com/embed/${e}`,frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0,title:"YouTube video",style:{display:"block"}})}const p=[{value:"Overview",id:"overview",level:2},{value:"Legacy",id:"legacy",level:3},{value:"Key Specifications",id:"key-specifications",level:2},{value:"System Integration Advice",id:"system-integration-advice",level:2},{value:"Terminology",id:"terminology",level:3},{value:"Module options",id:"module-options",level:3},{value:"Expansion",id:"expansion",level:3},{value:"Controls, Connectors &amp; Indicators",id:"controls-connectors--indicators",level:2},{value:"Inputs and outputs",id:"inputs-and-outputs",level:3},{value:"Potentiometer knobs",id:"potentiometer-knobs",level:3},{value:"Switches",id:"switches",level:3},{value:"Operation",id:"operation",level:2},{value:"Compositing applications",id:"compositing-applications",level:3},{value:"Key logic",id:"key-logic",level:3},{value:"External keying",id:"external-keying",level:3},{value:"Multichannel operation",id:"multichannel-operation",level:3},{value:"Video Tutorial",id:"video-tutorial",level:2},{value:"Installation",id:"installation",level:2},{value:"Requirements",id:"requirements",level:3},{value:"Procedure",id:"procedure",level:3},{value:"Full Specifications",id:"full-specifications",level:2},{value:"Technical Data",id:"technical-data",level:3},{value:"Maintenance",id:"maintenance",level:2},{value:"Hardware Revisions",id:"hardware-revisions",level:2}];function x(e){const s={a:"a",admonition:"admonition",annotation:"annotation",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",mspace:"mspace",msub:"msub",p:"p",semantics:"semantics",span:"span",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"fkg3",children:"FKG3"})}),"\n",(0,a.jsx)("span",{class:"head2_nolink",children:"Fader & Key Generating Compositor"}),"\n",(0,a.jsx)("img",{src:l,alt:"FKG3 front panel"}),"\n",(0,a.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(s.p,{children:"FKG3 serves a wide range of creative image compositing functions. It's a key generator and RGB fader in one, allowing two RGB triplets to be layered with an internal or external key. Keys can be cut based upon luminance, or any one of the RGB color components. The edge of the key can range from hard to soft. The key softness can be increased so much that FKG3 becomes a crossfader with no key edge at all. Threshold and Softness can be voltage controlled with video rate signals. RGB and monochrome sources can be freely composited thanks to internally self-normalled input jacks."}),"\n",(0,a.jsx)(s.p,{children:"Keying is based on analog logic. This is what allows FKG3 to perform a variety of fades, hard keys, and soft keys. It's also the \"key\" to controlling how chroma keys are cut. The individual RGB inputs open up creative possibilites that aren't possible with the conventional key bus of an ordinary video mixer."}),"\n",(0,a.jsx)(s.p,{children:"The analog logic of FKG3 can be applied to any signal, not just a video image. Low frequency control voltages can also be processed."}),"\n",(0,a.jsxs)(s.p,{children:["FKG3 has a bonus feature: ",(0,a.jsx)(s.strong,{children:"Edge"})," outline mode. Edge mode cuts a narrow window key, knocking out values above and below the key threshold. All of these features take FKG3 far beyond what a plain vanilla mixer can do."]}),"\n",(0,a.jsx)(s.h3,{id:"legacy",children:"Legacy"}),"\n",(0,a.jsxs)(s.p,{children:["FKG3 is a third-generation compositing module that consolidates and streamlines functions from previous designs such as the Visionary ",(0,a.jsx)(s.strong,{children:"Triple Video Fader & Key Generator"}),". It also shares DNA with the Expedition series ",(0,a.jsx)(s.strong,{children:"Doorway"}),", ",(0,a.jsx)(s.strong,{children:"Polar Fringe"})," and ",(0,a.jsx)(s.strong,{children:"Marble Index"}),"."]}),"\n",(0,a.jsx)(s.p,{children:"FKG3 is more familiar from the perspective of traditional keying in a video mixer. Compared to previous LZX compositing modules, FKG3 is more intuitive, allowing the artist to quickly and effortlessly achieve frequently needed compositing effects. But that is just the beginning. The creative potential of FKG3 goes far beyond a standard video mixer."}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"key-specifications",children:"Key Specifications"}),"\n",(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{}),(0,a.jsx)(s.th,{})]})}),(0,a.jsxs)(s.tbody,{children:[(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Mounting Width"}),(0,a.jsx)(s.td,{children:"12 HP"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Power Consumption"}),(0,a.jsx)(s.td,{children:"12V @ 200 mA"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Power Connectors"}),(0,a.jsx)(s.td,{children:"16 pin EuroRack ribbon, 2.1mm DC barrel"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Included"}),(0,a.jsx)(s.td,{children:"DC barrel power cable, EuroRack power cable, RCA sync cable"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Video Sync"}),(0,a.jsx)(s.td,{children:"Rear RCA in & out"})]})]})]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"system-integration-advice",children:"System Integration Advice"}),"\n",(0,a.jsx)(s.p,{children:"FKG3 is a core module in almost any modular video synth. Compositing is a primary function in many patches that combine multiple signals. To understand the significance and value of FKG3 compared to other modules, we need to define some terms."}),"\n",(0,a.jsx)(s.h3,{id:"terminology",children:"Terminology"}),"\n",(0,a.jsxs)(s.p,{children:["The terms ",(0,a.jsx)(s.em,{children:"layering"}),", ",(0,a.jsx)(s.em,{children:"blending"})," and ",(0,a.jsx)(s.em,{children:"compositing"})," are often used interchangeably, but they are technically different. ",(0,a.jsx)(s.em,{children:"Layering"})," refers to any combination of two or more images. ",(0,a.jsx)(s.em,{children:"Blending"})," is a type of layering in which two images are combined using a math operation such as sum or difference. ",(0,a.jsx)(s.em,{children:"Compositing"})," is a type of layering in which two or more images appear to be stacked over one another, or in front of one another. Compositing requires a mask or stencil, often called a ",(0,a.jsx)(s.em,{children:"matte"})," in film compositing."]}),"\n",(0,a.jsxs)(s.p,{children:["In video terms, the mask is known as a ",(0,a.jsx)(s.em,{children:"key"}),". The key can come from one of the stacked images, or from some other source such as a gradient. In the case of a gradient as the key source, sweeping the key threshold across a value range creates the effect of a ",(0,a.jsx)(s.em,{children:"wipe"}),"."]}),"\n",(0,a.jsx)(s.p,{children:'Keys can have hard or soft edges. They can be derived or "cut" from the brightness value of an image, or from a particular color.'}),"\n",(0,a.jsx)(s.h3,{id:"module-options",children:"Module options"}),"\n",(0,a.jsxs)(s.p,{children:["Other analog logic based modules, such as DSG3, can blend two sources, but they can't perform compositing operations. Comparator modules such as Keychain, Stacker, or Ribbons can generate hard keys, but they can't actually combine two images. They're ",(0,a.jsx)(s.em,{children:"keyers"}),", not compositors. Another module with multiple inputs, such as Switcher, would be required to do the actual compositing based on an external key provided by the keyer module."]}),"\n",(0,a.jsxs)(s.p,{children:["FKG3 is the all-in-one solution for compositing two layers. It generates a key internally and applies it as a mask to cut out the opacity of one layer. This gives the effect of stacking the layers. FKG3 is also a requirement for a soft key, in which the stencil edge is not a sharp transition, but a gradient. And FKG3's ",(0,a.jsx)(s.strong,{children:"Edge"})," keying mode creates a visually interesting effect that would be complicated to patch using other modules."]}),"\n",(0,a.jsx)(s.h3,{id:"expansion",children:"Expansion"}),"\n",(0,a.jsxs)(s.p,{children:["Modules such as Proc, Matte, and Factors provide support to FKG3, extending its capabilities. These auxiliary modules perform important functions such as extending the range of the key ",(0,a.jsx)(s.strong,{children:"Threshold"}),", or adjusting the contrast of external key sources. Together, FKG3 and its support modules form a flexible compositing subsystem."]}),"\n",(0,a.jsx)(s.p,{children:"Multiple FKG3 modules allow compositing of more than two sources. The number of possible compositing layers is equal to the number of FKG3 modules, plus one."}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"controls-connectors--indicators",children:"Controls, Connectors & Indicators"}),"\n",(0,a.jsx)(s.h3,{id:"inputs-and-outputs",children:"Inputs and outputs"}),"\n",(0,a.jsx)(s.p,{children:"FKG3 has three sets of RGB inputs and one set of RGB outputs. Like all Gen3 modules, the inputs are internally self-normalled, so that a signal patched into an input jack cascades downward to the inputs below it."}),"\n",(0,a.jsxs)(s.p,{children:["The RGB input triplets, from left to right, are ",(0,a.jsx)(s.strong,{children:"Background"}),", ",(0,a.jsx)(s.strong,{children:"Foreground"}),", and ",(0,a.jsx)(s.strong,{children:"Key"}),". Background is indicated by a black rectangle, Foreground is a white rectangle, and the Key input is signified by a skeleton key icon."]}),"\n",(0,a.jsxs)(s.p,{children:['Background and Foreground are merely convenient labels for the inputs. The priority of layering is not fixed. Either the Background and Foreground can be assigned as the visually "top" or "front" layer, depending on the settings of the ',(0,a.jsx)(s.strong,{children:"Key Source"})," and ",(0,a.jsx)(s.strong,{children:"Key Invert"})," switches, described below."]}),"\n",(0,a.jsxs)(s.p,{children:["The Key input triplet allows an external source to define the key. Any image, gradient, or low frequency signal can provide the basis for the mask. The behavior of the Key inputs is different depending on the ",(0,a.jsx)(s.strong,{children:"Key Mode"})," setting, as explained in the ",(0,a.jsx)(s.a,{href:"/docs/modules/fkg3#operation",children:"Operation"})," section below."]}),"\n",(0,a.jsxs)(s.p,{children:["Key Threshold and Softness can be modulated by video-rate control voltages supplied to the ",(0,a.jsx)(s.strong,{children:"Threshold CV"})," and ",(0,a.jsx)(s.strong,{children:"Softness CV"})," inputs."]}),"\n",(0,a.jsxs)(s.admonition,{type:"note",children:[(0,a.jsx)(s.p,{children:"All RGB inputs and outputs of FKG3 are constrained to the unipolar range of 0 to 1 volt. FKG3 cannot pass a negative voltage; any input below zero is clipped to a value of zero."}),(0,a.jsx)(s.p,{children:"Threshold and Softness CV inputs can accept negative voltages."})]}),"\n",(0,a.jsx)(s.h3,{id:"potentiometer-knobs",children:"Potentiometer knobs"}),"\n",(0,a.jsxs)(s.p,{children:["FKG3 has two sets of pots controlling the key ",(0,a.jsx)(s.strong,{children:"Threshold"})," and ",(0,a.jsx)(s.strong,{children:"Softness"}),", and their respective ",(0,a.jsx)(s.strong,{children:"CV Depth"})," amounts. Threshold is the value at which the key is cut, Softness is the width of the gradient at the key threshold. With a very low Softness, that gradient width is reduced to near zero, for a hard key."]}),"\n",(0,a.jsx)(s.admonition,{type:"note",children:(0,a.jsx)(s.p,{children:"For an extremely sharp-edged hard key, a comparator module such as Keychain, Stacker, or Ribbons may give better results. Cut the key using the comparator module, and send its output to the external Key input of FKG3."})}),"\n",(0,a.jsx)(s.p,{children:'The Threshold and Softness pots range from 0 to 1. However, these are not the full extents of the parameters. We can "push" the Threshold or Softness beyond the range of the pots by supplying a voltage to the CV input. In this way, we can, for example, key the Foreground or Background completely out, making it fully transparent.'}),"\n",(0,a.jsx)(s.p,{children:"The CV Depth pots are attenuverters, ranging from -1 to +1. An incoming control voltage is multiplied by the value of the attenuverter before being added to the Threshold or Softness."}),"\n",(0,a.jsx)(s.h3,{id:"switches",children:"Switches"}),"\n",(0,a.jsx)(s.p,{children:"Two rotary switches and one toggle switch define the settings for the key polarity, edge mode, key source, and key color mode."}),"\n",(0,a.jsxs)(s.p,{children:["The most important control is the ",(0,a.jsx)(s.strong,{children:"Key Source"})," rotary switch. This chooses which set of inputs is sent to the key generator to cut the stencil. It's labeled with three icons: a black rectangle for the Background inputs, a white rectangle for the Foreground inputs, and a skeleton key for the external Key inputs."]}),"\n",(0,a.jsxs)(s.p,{children:["The other rotary switch chooses the ",(0,a.jsx)(s.strong,{children:"Key Mode"}),", determining which color channel(s) are used to cut the key. The white rectangle chooses ",(0,a.jsx)(s.strong,{children:"Luminance Key"})," mode. In this mode, the RGB channels of the Key Source are summed according to the luminance formula described in the ",(0,a.jsx)(s.a,{href:"/docs/modules/fkg3#operation",children:"Operation"})," section below. The summed luminance value is sent to the key generator."]}),"\n",(0,a.jsxs)(s.p,{children:["The Red, Green, and Blue settings of the Key Mode switch choose the color channel for ",(0,a.jsx)(s.strong,{children:"Chroma Key"})," mode. A key is cut based on the values of the RGB primaries. A detailed explanation follows in the ",(0,a.jsx)(s.a,{href:"/docs/modules/fkg3#operation",children:"Operation"})," section. The short version is that the chosen color primary is knocked out. The key generator sets the key to a low value wherever that primary is pure. The compositor then makes that area transparent."]}),"\n",(0,a.jsx)(s.p,{children:'The toggle switch at the upper left has three positions. In the center, default position, the key is not inverted. The key is cut based on the brightest values of the Key Source. When the switch is set to its upper position, the polarity is inverted, and the key is cut based on the darker values of the Key Source. By adjusting both the Key Source and the polarity, we can achieve the visual effect of placing the Foreground input "on top" or "in front" of the Background input, or vice versa.'}),"\n",(0,a.jsxs)(s.p,{children:["In the lower position, the toggle switch enables ",(0,a.jsx)(s.strong,{children:"Edge"}),' mode. This is not an edge detector like the Contour module. It\'s a type of window key, where the key has two thresholds instead of one. Values slightly above and slightly below the Threshold are knocked out. The "top" or "front" input becomes an "edge" with variable Softness, superimposed over the "bottom" or "back" input.']}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"operation",children:"Operation"}),"\n",(0,a.jsx)(s.h3,{id:"compositing-applications",children:"Compositing applications"}),"\n",(0,a.jsx)(s.p,{children:"FKG3 can be patched to achieve various compositing functions, such as a crossfade or a voltage controlled amplifier. The most common application is as a keying compositor, in which two images are layered with a mask or key."}),"\n",(0,a.jsx)(s.p,{children:"To use FKG3 as a crossfader, it doesn't need a key input. Simply patch signals into Foreground and Background, set the Softness to maximum, and adjust the fade amount with the Threshold. If you're not able to exclusively fade to one signal, patch a static voltage source such as Proc or Matte into the Threshold CV input. Set the Threshold to 0.5. Fade from one input to the other using the Threshold CV Depth, or using the module that supplies the static voltage."}),"\n",(0,a.jsx)(s.p,{children:"To use FKG3 as a VCA, set it up the same way as for a crossfade, but make one of the Foreground or Background inputs black. It's best to patch a static voltage source into the top, Red input of one of the inputs, in order to control the bias or pedestal."}),"\n",(0,a.jsx)(s.p,{children:"To use FKG3 as a keying compositor, patch signals into Foreground and Background. Choose which input is the Key Source, optionally Invert the key or activate Edge mode, and set Softness and Threshold to achieve the desired visual result."}),"\n",(0,a.jsx)(s.h3,{id:"key-logic",children:"Key logic"}),"\n",(0,a.jsx)(s.p,{children:'Threshold CV is a multiplier for the Key Source. And since all LZX CV inputs are video rate, we can use an image or pattern to mask the Key Source. For example, we can use Threshold CV as a "garbage matte" to block some area of the Key Source, rendering that area of the "top" or "front" layer transparent. Or we can create complex keys from the product of the Key Source and the Threshold CV, pre-compositing the key before it composites the Foreground and Background.'}),"\n",(0,a.jsx)(s.p,{children:"In Luminance key mode, the brightness of the Key Source is used to cut the stencil. Luminance is calculated from RGB inputs with the luma weighting formula:"}),"\n",(0,a.jsx)(s.span,{className:"katex-display",children:(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mi,{children:"Y"}),(0,a.jsx)(s.mo,{children:"="}),(0,a.jsx)(s.mn,{children:"0.299"}),(0,a.jsx)(s.mi,{children:"R"}),(0,a.jsx)(s.mo,{children:"+"}),(0,a.jsx)(s.mn,{children:"0.587"}),(0,a.jsx)(s.mi,{children:"G"}),(0,a.jsx)(s.mo,{children:"+"}),(0,a.jsx)(s.mn,{children:"0.114"}),(0,a.jsx)(s.mi,{children:"B"})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"Y = 0.299R + 0.587G + 0.114B"})]})})}),(0,a.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.22222em"},children:"Y"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,a.jsx)(s.span,{className:"mrel",children:"="}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.7667em",verticalAlign:"-0.0833em"}}),(0,a.jsx)(s.span,{className:"mord",children:"0.299"}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.00773em"},children:"R"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"+"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.7667em",verticalAlign:"-0.0833em"}}),(0,a.jsx)(s.span,{className:"mord",children:"0.587"}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"G"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"+"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,a.jsx)(s.span,{className:"mord",children:"0.114"}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05017em"},children:"B"})]})]})]})}),"\n",(0,a.jsx)(s.p,{children:"Chroma keys are based on RGB exclusive analog logic. The transparency amount is determined by the purity of the selected color component."}),"\n",(0,a.jsx)(s.p,{children:"Chroma keys use the following logic. The key value is the transparency, so a high value for K results in that area being keyed out."}),"\n",(0,a.jsx)(s.span,{className:"katex-display",children:(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsxs)(s.msub,{children:[(0,a.jsx)(s.mi,{children:"K"}),(0,a.jsx)(s.mi,{children:"R"})]}),(0,a.jsx)(s.mo,{children:"="}),(0,a.jsx)(s.mi,{children:"m"}),(0,a.jsx)(s.mi,{children:"i"}),(0,a.jsx)(s.mi,{children:"n"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"{"}),(0,a.jsx)(s.mi,{children:"R"}),(0,a.jsx)(s.mo,{separator:"true",children:","}),(0,a.jsx)(s.mn,{children:"1"}),(0,a.jsx)(s.mo,{children:"\u2212"}),(0,a.jsx)(s.mi,{children:"G"}),(0,a.jsx)(s.mo,{separator:"true",children:","}),(0,a.jsx)(s.mn,{children:"1"}),(0,a.jsx)(s.mo,{children:"\u2212"}),(0,a.jsx)(s.mi,{children:"B"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"}"}),(0,a.jsx)(s.mspace,{linebreak:"newline"}),(0,a.jsxs)(s.msub,{children:[(0,a.jsx)(s.mi,{children:"K"}),(0,a.jsx)(s.mi,{children:"G"})]}),(0,a.jsx)(s.mo,{children:"="}),(0,a.jsx)(s.mi,{children:"m"}),(0,a.jsx)(s.mi,{children:"i"}),(0,a.jsx)(s.mi,{children:"n"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"{"}),(0,a.jsx)(s.mi,{children:"G"}),(0,a.jsx)(s.mo,{separator:"true",children:","}),(0,a.jsx)(s.mn,{children:"1"}),(0,a.jsx)(s.mo,{children:"\u2212"}),(0,a.jsx)(s.mi,{children:"R"}),(0,a.jsx)(s.mo,{separator:"true",children:","}),(0,a.jsx)(s.mn,{children:"1"}),(0,a.jsx)(s.mo,{children:"\u2212"}),(0,a.jsx)(s.mi,{children:"B"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"}"}),(0,a.jsx)(s.mspace,{linebreak:"newline"}),(0,a.jsxs)(s.msub,{children:[(0,a.jsx)(s.mi,{children:"K"}),(0,a.jsx)(s.mi,{children:"B"})]}),(0,a.jsx)(s.mo,{children:"="}),(0,a.jsx)(s.mi,{children:"m"}),(0,a.jsx)(s.mi,{children:"i"}),(0,a.jsx)(s.mi,{children:"n"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"{"}),(0,a.jsx)(s.mi,{children:"B"}),(0,a.jsx)(s.mo,{separator:"true",children:","}),(0,a.jsx)(s.mn,{children:"1"}),(0,a.jsx)(s.mo,{children:"\u2212"}),(0,a.jsx)(s.mi,{children:"R"}),(0,a.jsx)(s.mo,{separator:"true",children:","}),(0,a.jsx)(s.mn,{children:"1"}),(0,a.jsx)(s.mo,{children:"\u2212"}),(0,a.jsx)(s.mi,{children:"G"}),(0,a.jsx)(s.mo,{stretchy:"false",children:"}"})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"K_R = min \\lbrace R, 1-G, 1-B \\rbrace\n\\newline K_G = min \\lbrace G, 1-R, 1-B \\rbrace\n\\newline K_B = min \\lbrace B, 1-R, 1-G \\rbrace"})]})})}),(0,a.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.07153em"},children:"K"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(s.span,{className:"vlist-r",children:[(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.3283em"},children:(0,a.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.0715em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mathnormal mtight",style:{marginRight:"0.00773em"},children:"R"})})]})}),(0,a.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,a.jsx)(s.span,{})})})]})})]}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,a.jsx)(s.span,{className:"mrel",children:"="}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"min"}),(0,a.jsx)(s.span,{className:"mopen",children:"{"}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.00773em"},children:"R"}),(0,a.jsx)(s.span,{className:"mpunct",children:","}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsx)(s.span,{className:"mord",children:"1"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8778em",verticalAlign:"-0.1944em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"G"}),(0,a.jsx)(s.span,{className:"mpunct",children:","}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsx)(s.span,{className:"mord",children:"1"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05017em"},children:"B"}),(0,a.jsx)(s.span,{className:"mclose",children:"}"})]}),(0,a.jsx)(s.span,{className:"mspace newline"}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.07153em"},children:"K"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(s.span,{className:"vlist-r",children:[(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.3283em"},children:(0,a.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.0715em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mathnormal mtight",children:"G"})})]})}),(0,a.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,a.jsx)(s.span,{})})})]})})]}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,a.jsx)(s.span,{className:"mrel",children:"="}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"min"}),(0,a.jsx)(s.span,{className:"mopen",children:"{"}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"G"}),(0,a.jsx)(s.span,{className:"mpunct",children:","}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsx)(s.span,{className:"mord",children:"1"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8778em",verticalAlign:"-0.1944em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.00773em"},children:"R"}),(0,a.jsx)(s.span,{className:"mpunct",children:","}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsx)(s.span,{className:"mord",children:"1"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05017em"},children:"B"}),(0,a.jsx)(s.span,{className:"mclose",children:"}"})]}),(0,a.jsx)(s.span,{className:"mspace newline"}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.07153em"},children:"K"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(s.span,{className:"vlist-r",children:[(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.3283em"},children:(0,a.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"-0.0715em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mathnormal mtight",style:{marginRight:"0.05017em"},children:"B"})})]})}),(0,a.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,a.jsx)(s.span,{})})})]})})]}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,a.jsx)(s.span,{className:"mrel",children:"="}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"min"}),(0,a.jsx)(s.span,{className:"mopen",children:"{"}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05017em"},children:"B"}),(0,a.jsx)(s.span,{className:"mpunct",children:","}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsx)(s.span,{className:"mord",children:"1"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8778em",verticalAlign:"-0.1944em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.00773em"},children:"R"}),(0,a.jsx)(s.span,{className:"mpunct",children:","}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsx)(s.span,{className:"mord",children:"1"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,a.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(s.span,{className:"mord mathnormal",children:"G"}),(0,a.jsx)(s.span,{className:"mclose",children:"}"})]})]})]})}),"\n",(0,a.jsx)(s.p,{children:"To cut a key based upon a color component, that component value must be high, and the other component values must be low. For example, to key out the red areas of an image, the red value must be high, and both green and blue values must be low. Only a red image area will cut the key. A white image area includes red at full intensity, but will not cut a key because green and blue are also at full intensity. The minimum of the three values would be zero, resulting in no transparency."}),"\n",(0,a.jsx)(s.p,{children:"If cutting an internal self-key in chroma key modes, where either the Foreground or Background inputs supply the key source, FKG3 operates the same as a traditional keyer on a video mixer. However, FKG3 does not have a hue control. Precisely dialing in a conventional chroma key such as a green screen may require color correcting  RGB components before sending them to the external Key input."}),"\n",(0,a.jsx)(s.h3,{id:"external-keying",children:"External keying"}),"\n",(0,a.jsx)(s.p,{children:"The full power of FKG3 is unlocked with the external Key inputs. The mere fact that we can patch whatever we like into the RGB inputs gives us a level of creative freedom that's simply not possible with a conventional mixer. Feel free to experiment, but keep in mind that chroma key modes must follow the analog logic described above."}),"\n",(0,a.jsx)(s.p,{children:"If cutting an external chroma key from arbitrary sources, the exclusion logic must be taken into account. Due to the internal self-normalling of the RGB inputs, any jack will normally receive a signal from a signal patched in above it. This can cause unexpected results in external chroma key patches. If we patch different sources into the three RGB key inputs, then we can't isolate the key channels by simply choosing different chroma key modes. Any positive value in any input will raise the key threshold, increasing transparency. And that threshold will be different for each chroma key mode."}),"\n",(0,a.jsx)(s.admonition,{type:"tip",children:(0,a.jsx)(s.p,{children:"As always, we can break the internal normal with a dummy plug wired to connect tip to sleeve, or with a zero voltage source. For example, to use only the Green key input as a chroma key, insert a dummy plug into the Blue jack."})}),"\n",(0,a.jsx)(s.h3,{id:"multichannel-operation",children:"Multichannel operation"}),"\n",(0,a.jsx)(s.p,{children:"Since the RGB inputs are internally self-normalled, we can easily mix and match color and grayscale images. Simply patch a monochrome signal into a Red input, and it flows to the Green and Blue inputs below."}),"\n",(0,a.jsx)(s.p,{children:"That much is pretty standard procedure. Things get more interesting when we consider each row of Red, Green, and Blue jacks as a semi-independent signal chain. Each of the RGB components is composited separately, so we could patch arbitrary monochrome signals into all of the Foreground and Background inputs, and get three different monochrome composite outputs."}),"\n",(0,a.jsx)(s.p,{children:"But remember that there's only one key to rule them all. No matter how we generate the key \u2014 internally, externally, luma or chroma \u2014 it's always a single monochrome stencil. All three of the independent channels are composited with the same key. Nevertheless, this is a useful technique for video and low frequency applications. For example, we can apply a VCA or crossfade effect to two sets of three different control signals such as LFOs or random value generators."}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"video-tutorial",children:"Video Tutorial"}),"\n",(0,a.jsx)(m,{videoId:"h32UDIphXuI"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.a,{href:"https://youtu.be/h32UDIphXuI",children:"3 Patches for FKG3"}),"\r\n",(0,a.jsx)("br",{}),"presented by Johnny Woods"]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(s.h3,{id:"requirements",children:"Requirements"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"EuroRack enclosure"}),"\n",(0,a.jsx)(s.li,{children:"12V DC or EuroRack power supply"}),"\n",(0,a.jsxs)(s.li,{children:["2.1mm DC barrel power cable ",(0,a.jsx)(s.strong,{children:"or"})," a EuroRack power cable (both options included)"]}),"\n",(0,a.jsx)(s.li,{children:"Four M2.5 x 6mm mounting screws, or screws provided or specified by the enclosure manufacturer"}),"\n",(0,a.jsx)(s.li,{children:"#1 Phillips head screwdriver, or hand tool provided or specified by the enclosure manufacturer"}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"procedure",children:"Procedure"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Power off and disconnect the EuroRack enclosure's power supply and any attached DC adapters."}),"\n",(0,a.jsxs)(s.li,{children:["Connect either the EuroRack Power Cable ",(0,a.jsx)(s.strong,{children:"or"})," the DC Barrel Power Cable to the module. Do not connect both Eurorack and DC Barrel power."]}),"\n",(0,a.jsx)(s.li,{children:"Ensure that no mounting screws are in any holes in the area where you wish to mount the module."}),"\n",(0,a.jsx)(s.li,{children:"Carefully test fit the module with its attached power cable in the open space in the EuroRack enclosure. If it is obstructed by the enclosure or any internal assemblies, abort this procedure."}),"\n",(0,a.jsx)(s.li,{children:"Connect the disconnected end of the power cable to the power supply."}),"\n",(0,a.jsx)(s.li,{children:"Connect the sync cable to a sync source or the last module in the sync chain."}),"\n",(0,a.jsx)(s.li,{children:"Mount the module to the EuroRack rails using all mounting holes."}),"\n",(0,a.jsx)(s.li,{children:"Store the unused cable along with the product box in a safe location."}),"\n",(0,a.jsx)(s.li,{children:"Power on the EuroRack enclosure and start patching."}),"\n"]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"full-specifications",children:"Full Specifications"}),"\n",(0,a.jsxs)("table",{children:[(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:"\xa0"}),(0,a.jsx)("th",{children:"Connectors"}),(0,a.jsx)("th",{children:"Controls"})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("img",{src:o,alt:"FKG3: labeled front panel controls"})}),(0,a.jsx)("td",{children:(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{children:"Jack"}),(0,a.jsx)(s.th,{children:"Function"})]})}),(0,a.jsxs)(s.tbody,{children:[(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"J1"}),(0,a.jsx)(s.td,{children:"Threshold CV in"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"J2"}),(0,a.jsx)(s.td,{children:"Softness CV in"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"J3"}),(0,a.jsx)(s.td,{children:"Red Background in"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"J4"}),(0,a.jsx)(s.td,{children:"Red Foreground in"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"J5"}),(0,a.jsx)(s.td,{children:"Red Key in"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"J6"}),(0,a.jsx)(s.td,{children:"Red out"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"J7"}),(0,a.jsx)(s.td,{children:"Green Background in"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"J8"}),(0,a.jsx)(s.td,{children:"Green Foreground in"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"J9"}),(0,a.jsx)(s.td,{children:"Green Key in"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"J10"}),(0,a.jsx)(s.td,{children:"Green out"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"J11"}),(0,a.jsx)(s.td,{children:"Blue Background in"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"J12"}),(0,a.jsx)(s.td,{children:"Blue Foreground in"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"J13"}),(0,a.jsx)(s.td,{children:"Blue Key in"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"J14"}),(0,a.jsx)(s.td,{children:"Blue out"})]})]})]})}),(0,a.jsxs)("td",{children:[(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{children:"Switch"}),(0,a.jsx)(s.th,{children:"Function"})]})}),(0,a.jsxs)(s.tbody,{children:[(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"S1"}),(0,a.jsx)(s.td,{children:"Edge / Invert"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"S2"}),(0,a.jsx)(s.td,{children:"Key Source"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"S3"}),(0,a.jsx)(s.td,{children:"Key color mode"})]})]})]}),(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{children:"Pot"}),(0,a.jsx)(s.th,{children:"Function"})]})}),(0,a.jsxs)(s.tbody,{children:[(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"P1"}),(0,a.jsx)(s.td,{children:"Threshold"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"P2"}),(0,a.jsx)(s.td,{children:"Softness"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"P3"}),(0,a.jsx)(s.td,{children:"Threshold CV Depth"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"P4"}),(0,a.jsx)(s.td,{children:"Softness CV Depth"})]})]})]})]})]})]}),"\n",(0,a.jsx)(s.h3,{id:"technical-data",children:"Technical Data"}),"\n",(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{}),(0,a.jsx)(s.th,{})]})}),(0,a.jsxs)(s.tbody,{children:[(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Manufacturer Part Number"}),(0,a.jsx)(s.td,{children:"950043"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Mounting Width"}),(0,a.jsx)(s.td,{children:"12 HP"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Mounting Depth"}),(0,a.jsx)(s.td,{children:"42 mm"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Mounting Hole Count"}),(0,a.jsx)(s.td,{children:"4"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Power Consumption"}),(0,a.jsx)(s.td,{children:"12V @ 200 mA"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Power Connectors"}),(0,a.jsx)(s.td,{children:"16 pin EuroRack ribbon, 2.1mm DC barrel"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Input Impedance"}),(0,a.jsx)(s.td,{children:"1M ohms"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Output Impedance"}),(0,a.jsx)(s.td,{children:"75 ohms"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Input Protection Range"}),(0,a.jsx)(s.td,{children:"+/-20V"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Input Clipping Range"}),(0,a.jsx)(s.td,{children:"+/-2.5V"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Output Range"}),(0,a.jsx)(s.td,{children:"+/-2.5V"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Included"}),(0,a.jsx)(s.td,{children:"DC barrel power cable, EuroRack power cable, RCA sync cable"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"EuroRack Power Cable Type"}),(0,a.jsx)(s.td,{children:"16-pin"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"EuroRack Power Cable Length"}),(0,a.jsx)(s.td,{children:"25 cm"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"DC Barrel Power Cable Length"}),(0,a.jsx)(s.td,{children:"25 cm"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"RoHS Compliance"}),(0,a.jsx)(s.td,{children:"Manufactured with lead-free processes."})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"Video Sync"}),(0,a.jsx)(s.td,{children:"Rear RCA"})]})]})]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"maintenance",children:"Maintenance"}),"\n",(0,a.jsx)(s.p,{children:"Keep the module free of dust and debris by performing periodic cleaning. Spots may be cleaned from the front panel with a microfiber cloth and isopropyl alcohol or other electronics cleaner."}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h2,{id:"hardware-revisions",children:"Hardware Revisions"}),"\n",(0,a.jsx)(s.p,{children:"The hardware revision code is printed on the circuit board visible from the rear of the module."})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(x,{...e})}):x(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>l});var t=n(96540);const a={},i=t.createContext(a);function r(e){const s=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);